name: deployment workflow
on: push
jobs: 
    build_job:
          runs-on: ubuntu-latest
          steps:
             - name: Checkout code          # Actions-checkout is used to fetch your repository's code onto the runner machine
               uses: actions/checkout@v3
             - name: Configure AWS credentials
               uses: aws-actions/configure-aws-credentials@v2
               with:
                 aws-access-key-id: ${{secrets.AWS_S3_ACCESS_KEY_ID}}
                 aws-secret-access-key: ${{secrets.AWS_S3_SECRET_ACCESS_KEY}}
                 aws-region: ap-south-1
             - name: Login to ECR Public to push image
               run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/s5w5f4l4
             - name: Build jib project
               run: mvn -DskipTests clean package jib:build 
    deploy_job:
         needs: build_job
         runs-on: ubuntu-latest
         steps:
           - name: multiple command
             uses: appleboy/ssh-action@v1.0.3
             env:
              FOO: "BAR"
             with:
               host: ${{ secrets.HOST }}
               username: ${{ secrets.USERNAME }}
               key:  ${{ secrets.PEM_FILE }}
               port: ${{ secrets.PORT }}
               script: |
                    whoami
                    ls -al
                    echo "I am $FOO, thanks"
                    # aws configure set aws_access_key_id $AWS_S3_ACCESS_KEY_ID
                    # aws configure set aws_secret_access_key $AWS_S3_SECRET_ACCESS_KEY
                    # aws configure set default.region ap-south-1
                    
           # - name: SSH and run aws --version
           #   env:
           #    SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
           #    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
           #    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
           #    AWS_DEFAULT_REGION: ap-south-1
           #   run: |
           #    echo "$SSH_PRIVATE_KEY" > private_key
           #    chmod 600 private_key
           #    ssh-keyscan -H 13.232.219.196 >> ~/.ssh/known_hosts
           #    ssh -i private_key -o StrictHostKeyChecking=no ubuntu@13.232.219.196
                    
           
               
             
             
