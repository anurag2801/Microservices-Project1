name: deployment workflow
on: push
jobs: 
    build_job:
          runs-on: ubuntu-latest
          steps:
             - name: Checkout code          # Actions-checkout is used to fetch your repository's code onto the runner machine
               uses: actions/checkout@v3
             - name: Configure AWS credentials
               uses: aws-actions/configure-aws-credentials@v2
               with:
                 aws-access-key-id: ${{secrets.AWS_S3_ACCESS_KEY_ID}}
                 aws-secret-access-key: ${{secrets.AWS_S3_SECRET_ACCESS_KEY}}
                 aws-region: ap-south-1
             - name: Login to ECR Public to push image
               run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/s5w5f4l4
             - name: Build jib project
               run: mvn -DskipTests clean package jib:build 
    deploy_job:
         needs: build_job
         runs-on: ubuntu-latest
         steps:
            - name: ssh and deploy
              env:
                 SSH_PRIVATE_KEY: ${{ secrets.PEM_FILE }}
                 AWS_S3_ACCESS_KEY_ID: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
                 AWS_S3_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
                 AWS_REGION: ${{ secrets.AWS_REGION}}
                 # SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
                 # REMOTE_USER: ${{ secrets.REMOTE_USER }}
                 # REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
                 # docker run -d --name my-conatiner -p 8080:8080 public.ecr.aws/s5w5f4l4/new-project/app:0.0.1-SNAPSHOT 
              run: |
                echo "$SSH_PRIVATE_KEY" > private_key
                chmod 600 private_key
                ssh -i private_key -o StrictHostKeyChecking=no ubuntu@13.232.219.196 
                '
                aws --version
                echo "$AWS_REGION"
                '
               
             
             
